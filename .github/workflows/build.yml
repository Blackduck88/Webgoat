name: "Main build"
on:
    workflow_dispatch:
    push:
        branches:
            - develop/unir-demo

jobs:
    pre-commit:
        name: Pre-commit check
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout git repository
                uses: actions/checkout@v4.1.6
            -   name: Secret Scanner
                if: ${{ !always() }}
                uses: secret-scanner/action@0.0.2
            -   name: Set up JDK 23
                uses: actions/setup-java@v4.7.1
                with:
                    distribution: 'temurin'
                    java-version: 23
                    architecture: x64
                    cache: 'maven'
            -   name: Pre-commit checks
                uses: pre-commit-ci/lite-action@v1.1.0
                if: always()
            -   name: Run Unit Test
                run: mvn test
            -   name: Upload Surefire reports
                uses: actions/upload-artifact@master
                with:
                    name: Surefire reports
                    path: ${{github.workspace}}/target/surefire-reports
            -   name: Run Integration Test
                run: mvn verify
            -   name: Upload Failsafe reports
                uses: actions/upload-artifact@master
                with:
                    name: Failsafe reports
                    path: ${{github.workspace}}/target/failsafe-reports
            -   name: Run SonarQube Analysis
                run: |
                    mvn clean compile org.sonarsource.scanner.maven:sonar-maven-plugin:5.1.0.4751:sonar \
                        -Dsonar.host.url=https://sonarcloud.io \
                        -Dsonar.token=${{ secrets.SONAR_TOKEN }} \
                        -Dsonar.organization=${{ secrets.SONAR_ORG_KEY }} \
                        -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }} \
                        -Dsonar.java.jdkHome=$JAVA_HOME

    build:
        name: Build
        runs-on: ubuntu-latest
        needs: [pre-commit]
        strategy:
            fail-fast: true
        steps:
            -   name: Checkout git repository
                uses: actions/checkout@v4.1.6
            -   name: Set up JDK 23
                uses: actions/setup-java@v4.7.1
                with:
                    distribution: 'temurin'
                    java-version: 23
                    architecture: x64
                    cache: 'maven'
            -   name: Run OWASP Dependency Check
                run: mvn org.owasp:dependency-check-maven:check -DnvdApiKey=${{ secrets.NVD_API_KEY }} -DfailBuildOnCVSS=${{ vars.FAIL_BUILD_ON_CVSS }}
            -   name: Upload Dependency Check report
                uses: actions/upload-artifact@master
                with:
                    name: Dependency Check HTML report
                    path: ${{github.workspace}}/target/dependency-check-report.html

    test:
        name: Test
        runs-on: ubuntu-latest
        needs: [build]
        steps:
            -   name: Checkout git repository
                uses: actions/checkout@v4.1.6
            -   name: Set up JDK 23
                uses: actions/setup-java@v4.7.1
                with:
                    distribution: 'temurin'
                    java-version: 23
                    architecture: x64
                    cache: 'maven'
            -   name: Run application
                run: |
                    mvn clean package -DskipTests=true
                    nohup java -jar target/webgoat-2025.4-SNAPSHOT.jar &
            -   name: Check application is running
                run: |
                    max_retries=15
                    retry_count=0
                    exit_code=0
                    while [ $retry_count -lt $max_retries ]; do
                        if curl -s --fail http://localhost:8080/WebGoat/actuator/health > /dev/null; then
                            echo "WebGoat application running on http://localhost:8080/WebGoat"
                            break
                        else
                            echo "Waiting for WebGoat application to be running. Retrying..."
                            exit_code=$?
                            retry_count=$((retry_count + 1))
                            sleep 5
                        fi
                    done

                    if [ $retry_count -eq $max_retries ]; then
                        cat nohup.out
                        echo "Request failed after $max_retries retries. Failed with exit code $exit_code. Exiting."
                    fi
            -   name: ZAP Scan
                uses: zaproxy/action-full-scan@v0.12.0
                with:
                    target: 'http://localhost:8080/WebGoat'

    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [test]
        steps:
            -   uses: actions/checkout@v4.1.6
            -   name: Set up JDK 23
                uses: actions/setup-java@v4.7.1
                with:
                    distribution: 'temurin'
                    java-version: 23
                    architecture: x64
                    cache: 'maven'
            -   name: Compile project
                run: mvn --no-transfer-progress clean install -DskipTests=true
            -   name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v3
            -   name: Build Docker image
                run: |
                    docker build -t ${{secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }} .
            -   name: Run Trivy vulnerability scanner
                uses: aquasecurity/trivy-action@0.28.0
                with:
                    image-ref: '${{secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}'
                    format: 'table'
                    exit-code: '0'
                    ignore-unfixed: true
                    vuln-type: 'os,library'
                    severity: ${{ vars.TRIVY_SEVERITY_SCAN_FOR }}
                    scanners: "vuln"
                    output: "trivy-report.json"
            -   name: Upload Trivy Report
                if: always()
                uses: actions/upload-artifact@v4
                with:
                    name: trivy-report
                    path: trivy-report.json
                    retention-days: 30
            -   name: Login a Docker Hub
                run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{secrets.DOCKER_USERNAME }}" --password-stdin
            -   name: Push image to Docker Hub
                run: docker push ${{secrets.DOCKER_USERNAME }}/webgoat:${{ github.sha }}
